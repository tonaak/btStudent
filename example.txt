if ("".equals(userId))

<form action="deleteServlet" method="post">
  <input type="checkbox" name="id" value="1">
  <input type="checkbox" name="id" value="2">
  <input type="checkbox" name="id" value="3">
  ...
  <input type="submit" value="Delete">
</form>


------------------------------------------------------------

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/deleteServlet")
public class DeleteServlet extends HttpServlet {
  private static final long serialVersionUID = 1L;

  protected void doPost(HttpServletRequest request, HttpServletResponse response)
      throws ServletException, IOException {
    String[] ids = request.getParameterValues("id");

    try (Connection conn = ...;) {
      String sql = "DELETE FROM table_name WHERE id = ?";
      PreparedStatement stmt = conn.prepareStatement(sql);
      for (String id : ids) {
        stmt.setInt(1, Integer.parseInt(id));
        stmt.executeUpdate();
      }
    } catch (SQLException e) {
      e.printStackTrace();
    }
    response.sendRedirect("success.jsp");
  }
}

String path = "./file.txt";
System.out.println("Relative path: " + path);
String path = this.getClass().getProtectionDomain().getCodeSource().getLocation().getPath();
System.out.println("Absolute path: " + path);

		String from = "0000/00/00";
		String to = "9999/99/99";
		
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
		System.out.println(sdf.parse(from).before(sdf.parse(to)));


public void deleteUserData(String[] userIds) {
    Connection connection = null;
    try {
        Class.forName(SQL_DRIVER);
        connection = DriverManager.getConnection(SQL_URL, SQL_USERNAME, SQL_PASSWORD);
        String sql = "UPDATE users SET username = NULL, birthday = NULL, deletedate = CURRENT_TIMESTAMP WHERE userid IN (?"
                + String.join(",?", Collections.nCopies(userIds.length - 1, "?")) + ")";
        PreparedStatement statement = connection.prepareStatement(sql);
        for (int i = 0; i < userIds.length; i++) {
            statement.setString(i + 1, userIds[i]);
        }
        statement.executeUpdate();
    } catch (ClassNotFoundException | SQLException e) {
        e.printStackTrace();
    } finally {
        try {
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


List<User> userList = //populate the list of User objects
request.setAttribute("userList", userList);

<table>
  <tr>
    <th>User ID</th>
    <th>User Name</th>
    <th>Email</th>
  </tr>
  <logic:iterate name="userList" id="user" scope="request">
    <tr>
      <td><bean:write name="user" property="userId"/></td>
      <td><bean:write name="user" property="userName"/></td>
      <td><bean:write name="user" property="email"/></td>
    </tr>
  </logic:iterate>
</table>

public class MyAction extends Action {
  public ActionForward execute(ActionMapping mapping, ActionForm form,
    HttpServletRequest request, HttpServletResponse response)
      throws Exception {

    // Cast the ActionForm objects to the appropriate types
    MyForm myForm = (MyForm) form;
    OtherForm otherForm = (OtherForm) request.getAttribute("otherForm");

    // Modify the ActionForm objects as needed
    myForm.setSomeProperty("some value");
    otherForm.setOtherProperty("other value");

    // Forward to the JSP
    return mapping.findForward("success");
  }
}

public class OtherAction extends Action {
  public ActionForward execute(ActionMapping mapping, ActionForm form,
    HttpServletRequest request, HttpServletResponse response)
      throws Exception {

    // Create an instance of OtherForm and set some properties
    OtherForm otherForm = new OtherForm();
    otherForm.setOtherProperty("some value");

    // Set the OtherForm object in the request attributes
    request.setAttribute("otherForm", otherForm);

    // Forward to the JSP
    return mapping.findForward("success");
  }
}

